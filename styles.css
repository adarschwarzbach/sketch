#header{
    display: flex;
    justify-content: center;
    background-color: aliceblue;
    width: 100vw;
    margin-bottom: 8px;
}

#controls{
    display: flex;
    gap: 12px;
}

.buttons{
    flex-shrink: 0;
    border: 4px solid black;
    cursor: pointer;
    border-radius: 10%;
    font-family: 'OCR A Std, TeX Gyre Schola, serif';
    background-color: rgb(236, 204, 200);
    font-weight: bold;
}

.buttons:hover{
    
    border: 4px solid black;
    box-shadow: 5px 10px #888888;
}

.buttons:active{
    opacity: 60%;
    transform: scale(.85);
    box-shadow: 3px 2px 25px 1px rgba(0,0,0,0.25);

}

#eraser:active{
    background-color: white;
    color: white;
    border-color: rgb(236, 204, 200);
}




#container{ 
    display: flex;
    flex-wrap: wrap;
    background: white;
    width: 50%;
    margin: 16px;
    border: 4px solid aqua;
}

/* it apears that with the container set as it is
and the sub set is it is with width and height being an equal
percent corrosponding to side length
this will work for grid.
should be easy from here out if these principles are true */
.sub{
    display: inline-block;
    width: 25%;
    padding-bottom: 25%;
}


body{
    margin: 0px;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-items: center;
    background-color: rgb(239, 239, 239);
}

#footer{
    background-color: wheat;
    padding: 4px;
    padding-bottom: 4px;
    display: flex;
    justify-content: center;
    align-items: center;
    position: absolute;
    bottom: 0;
    left: 0;
    width: 100%;
    overflow: hidden;
    display: flex;
}


html{
    /* support footer when window is resized */
    position: relative;
    min-height: 100%;
}

a{
    text-decoration: none;
    font-size: 14px;
    color: darkblue;
    font-weight: bold;
}